;  mypdrom - DiskCart/MyPicoDos flashcart version
;
;  Copyright (C) 2007-2010 Matthias Reichl <hias@horus.com>
;
;  This program is free software; you can redistribute it and/or modify
;  it under the terms of the GNU General Public License as published by
;  the Free Software Foundation; either version 2 of the License, or
;  (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;  GNU General Public License for more details.
;
;  You should have received a copy of the GNU General Public License
;  along with this program; if not, write to the Free Software
;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

	.include "cio.inc"

	.include "common.inc"
	.include "cartsio.inc"
	.include "cartsiocode-osram.inc"

; MyPicoDos start address
MYSTART = $1000

; temp vectors for MyPicoDos
SRCADR  = $E0
DSTADR  = $E2

; RAM locations for init code
DRVTAB	= $7000	; drive table: 0=no drive, otherwise drive present
NUMDRV	= $7008 ; total number of drives
DRIVENO	= $7009 ; temp: drive number
OSTYPE	= $700A	; OS type
NAMBUF	= $7010 ; 32byte temporary name buffer
SEPLINE	= $7030	; 40byte "separator line" line
BASLINE	= $7058	; 40byte "toggle basic" line
NAMSCR	= $7100 ; 8*40 bytes screen for image names

; copy code to $400
	.MACRO RAMCPY
	LDY #[%1-1]
CPLP	LDA %2,Y
	STA $400,Y
	DEY
	BPL CPLP
	.ENDM

; copy code to $400 and JSR it
	.MACRO RAMJSR
	RAMCPY %1, %2
	JSR $400
	.ENDM

; copy code to $400 and JMP to it
	.MACRO RAMJMP
	RAMCPY %1, %2
	JMP $400
	.ENDM

;	* = $8000
;	.BYTE $FF

	* = $A000

	.include "cartsiocode-rom.src"

STARTMY	JSR SCROFF
	JSR CHKBAS
	JSR CLRRAM

	LDA #<MYPDOS
	STA SRCADR
	LDA #>MYPDOS
	STA SRCADR+1
	LDA #<MYSTART
	STA DSTADR
	LDA #>MYSTART
	STA DSTADR+1

	LDX #MYPDPG
	LDY #0
MYLP2	LDA (SRCADR),Y	; copy MyPicoDos code
	STA (DSTADR),Y
	INY
	BNE MYLP2
	INC SRCADR+1
	INC DSTADR+1
	DEX
	BNE MYLP2

	LDX #$FF
	TXS

	RAMJMP MYSETL, MYSETUP

; MyPicoDos init routine:
; disable cartridge, open screen and then run MyPicoDos

MYSETUP	INC $42
	CARTOFF
	LDA $D013
	STA $3FA
	DEC $42

	OPEN 0,12,0,EDITOR-MYSETUP+$400
	JMP MYSTART
EDITOR	.BYTE "E:", 155
MYSETL	= * - MYSETUP

; check if basic is present
CHKBAS	RAMJSR CKBASL, CKBAS
	TYA
	BNE NOBAS
	STA 1016
	LDA #$A0
	STA 106
	STA 740
	RTS
NOBAS	STA 1016
	LDA #$C0
	STA 106
	STA 740
	RTS

CKBAS	INC $42
	CARTOFF
	LDY #0
	LDA $A000
	INC $A000
	CMP $A000
	BEQ CKBAS1	; $A000 didn't change - ROM
	INY
CKBAS1	CARTBASE
	DEC $42
	RTS
CKBASL	= * - CKBAS	

; clear memory from $7000 to RAMTOP
CLRRAM	RAMJMP RCLRL, RCLR

RCLR	INC $42
	CARTOFF
	LDA #$70
	STA DSTADR+1
	LDA #0
	STA DSTADR
	TAY
RCLRLP	STA (DSTADR),Y
	DEY
	BNE RCLRLP
	INC DSTADR+1
	LDX DSTADR+1
	CPX 106
	BNE RCLRLP
	CARTBASE
	DEC $42
	RTS
RCLRL	= * - RCLR

INIT	LDA $D01F
	AND #4
	BNE NODIS

; disable cart if option is pressed
DISCAR	JSR SCROFF
	JMP EXIT

; normal init
NODIS	JSR CLRRAM
	LDA $D301
	ORA #2		; disable basic
	STA $D301

; setup SIO table for "get image name"
	LDX #$09
NAMSL	LDA NAMSIO,X
	STA $300,X
	DEX
	BPL NAMSL

	RAMCPY RSIOLEN, RSIO

	LDA #<NAMSCR
	STA DSTADR
	LDA #>NAMSCR
	STA DSTADR+1
	
; now get the names from the cart
NAMLP	LDA #$40
	STA $303
	JSR $400
	BMI NONAM

	INC NUMDRV
	LDX $301
	LDA #1
	STA DRVTAB-1,X

	LDY #0
	LDA #$42
	STA (DSTADR),Y
	INY
	TXA
	ORA #$90
	STA (DSTADR),Y
	INY
	LDA #$56
	STA (DSTADR),Y
	INY
	LDX #0
NAMLP1	LDA NAMBUF,X
	CMP #155
	BEQ NAMEND
	JSR INTERNAL
	STA (DSTADR),Y
	INY
	INX
	CPX #32
	BNE NAMLP1
NAMEND	CLC
	LDA DSTADR
	ADC #40
	STA DSTADR
	BCC NONAM
	INC DSTADR+1

NONAM	INC $301
	LDA $301
	CMP #9
	BNE NAMLP

	LDA NUMDRV	; are there any drives in the cart?
	BNE GOTDRV	; yes, continue
	JMP DISCAR	; no, disable cartridge and exit

GOTDRV	JSR CHKOS	; check for compatible OS
	BEQ OSOK	; OS compatible with bootable images
	JMP STARTMY	; OS incompatible - just start MyPicoDos

OSOK

; setup rest of screen
	LDY #39
SCRL1	LDA #$52
	STA SEPLINE,Y
	LDA TBASIC,Y
	STA BASLINE,Y
	DEY
	BPL SCRL1

	; display basic status
	JSR PBAS

; enable display
	LDA #<DLIST
	STA 560
	LDA #>DLIST
	STA 561
	LDA #0
	STA 710
	STA 712
	LDA #10
	STA 709		; screen colors
	LDA #$E0
	STA 756		; default character set
	LDA #2
	STA 755		; display inverse characters
	LDA #$22
	STA 559

; enable keyboard and break-key IRQs
	LDA #$C0
	STA $10
	STA $D20E
	CLI

KEYLP	JSR GETKEY
	BPL KEYLP1
KXIT	JMP DISCAR
KEYLP1	CMP #27
	BEQ KXIT
	CMP #$20
	BNE NOKSPC
	JMP STARTMY
NOKSPC	CMP #'1
	BCC NOKNUM
	CMP #'9
	BCS NOKNUM
	SEC
	SBC #'0
	STA DRIVENO

; check if slot is active
	TAX
	LDA DRVTAB-1,X
	BEQ KEYLP	; no, back to main loop

	JMP PATCHOS
NOKNUM	CMP #'B
	BNE NOKEYB
	LDA $D301
	EOR #$02
	STA $D301
	JSR PBAS
	JMP KEYLP
NOKEYB	JMP KEYLP

; convert ATASCII to screen code
INTERNAL
	CMP #32
	BCC INTGRAF
	CMP #96
	BCC INTNORM
	CMP #128
	BCC INTNO
	CMP #160
	BCC INTGRAF
	CMP #224
	BCS INTNO

INTNORM	SEC
	SBC #32
	RTS

INTGRAF	CLC
	ADC #64
INTNO	RTS

GETKEY	LDA $E425
	PHA
	LDA $E424
	PHA
	RTS

; display basic status on/off
PBAS	LDX #5
	LDY #0
	LDA $D301
	AND #2
	BEQ PBAS1	; basic is on
	LDX #0
PBAS1	LDA TOFF,X
	STA BASLINE+OBAS,Y
	INX
	INY
	CPY #5
	BNE PBAS1
	RTS

; simple SIO code for accessing the cart
RSIO	INC $42
	CARTBASE
	JSR CSIOROM
	BMI RSIOX
	CARTBNK CSSRCB
	LDY #0
RSIO1	LDA (CSSRC),Y
	STA (CSDST),Y
	INY
	CPY BUFLEN
	BNE RSIO1
RSIOX	CARTBASE
	DEC $42
	LDY $303
	RTS
RSIOLEN	= * - RSIO
	
NAMSIO	.BYTE $31, 1, $6E, $40
	.WORD NAMBUF
	.BYTE 7,0
	.WORD CLNNAME

; clear 4k from $7000
CLR7	LDX #$10
; clear X pages starting from $7000
CLR7X	LDA #$70
	STA SRCADR+1
	LDA #0
	STA SRCADR
	TAY
CLR7LP	STA (SRCADR),Y
	INY
	BNE CLR7LP
	INC SRCADR+1
	DEX
	BNE CLR7LP
	RTS

DLIST	.BYTE 112,112,112,112,112
	.BYTE $42
	.WORD TITLE
	.BYTE 112,112
	.BYTE 2
	.BYTE $42
	.WORD SEPLINE
	.BYTE 0
	.BYTE $42
	.WORD NAMSCR
	.BYTE 0,2,0,2,0,2,0,2,0,2,0,2,0,2,0
	.BYTE $42
	.WORD SEPLINE
	.BYTE $42
	.WORD THELP1
	.BYTE 0, $42
	.WORD THELP2
	.BYTE 0, $42
	.WORD BASLINE
	.BYTE 0, $42
	.WORD THELP3
	.BYTE $41
	.WORD DLIST

TITLE	.SBYTE "    "
	.SBYTE "DiskCart V0.4 (c) 2010 HiassofT"
	.SBYTE "     "

	.SBYTE "          "
	.SBYTE "images on cartridge:"
	.SBYTE "          "

THELP1	.SBYTE "        "
	.BYTE $42, $91, $56, 13, $42, $98, $56
	.SBYTE " = boot slot 1-8"
	.SBYTE "         "

THELP2	.SBYTE "       "
	.BYTE $42
	.SBYTE +$80, "SPACE"
	.BYTE $56
	.SBYTE " = start MyPicoDos"
	.SBYTE "        "

TBASIC	.SBYTE "           "
	.BYTE $42
	.SBYTE +$80, "B"
	.BYTE $56
	.SBYTE " = basic: "
OBAS	= * - TBASIC
	.SBYTE "     "
	.SBYTE "           "

THELP3	.SBYTE "              "
	.BYTE $42
	.SBYTE +$80, "ESC"
	.BYTE $56
	.SBYTE " = exit"
	.SBYTE "              "

TOFF	.BYTE $42
	.SBYTE +$80, "OFF"
	.BYTE $56

TON	.BYTE $42
	.SBYTE +$80, "ON"
	.BYTE $56
	.BYTE 0

MYPDOS	= *
.if .def MEGA512
	.incbin "mypdos-code-mega512.bin"
.endif
.if .def ATARIMAX8
	.incbin "mypdos-code-atarimax8.bin"
.endif
MYPDPG	= (*-MYPDOS+255) / 256

OSCOD	= *
.if .def MEGA512
	.incbin "cartsiocode-osram-mega512.bin"
.endif
.if .def ATARIMAX8
	.incbin "cartsiocode-osram-atarimax8.bin"
.endif
OSCODL	= * - OSCOD

TMPVEC	= DSTADR
	.include "romram.src"

; disable screen and wait for VBI
SCROFF	LDA #0
	STA 559
	LDA 20
SCWT	CMP 20
	BEQ SCWT
	RTS

PATCHOS	JSR SCROFF
	JSR ROMRAM

; set destination address depending on OS
	LDX OSTYPE
	LDA OSTAB,X
	STA DSTADR
	LDA OSTAB+1,X
	STA DSTADR+1

	LDY #OSCODL-1
PATCHL1	LDA OSCOD,Y
	STA (DSTADR),Y
	DEY
	BPL PATCHL1

; slot number
	LDY #OSLOTNO
	LDA DRIVENO
	STA (DSTADR),Y

; original SIO vector
	LDY #OSTDSIO
	LDA $E45A
	STA (DSTADR),Y
	INY
	LDA $E45B
	STA (DSTADR),Y

	LDA DSTADR
	STA $E45A
	LDA DSTADR+1
	STA $E45B

; install reset handler
	LDY #RESHL-1
CPRES	LDA RESH,Y
	STA RESADR,Y
	DEY
	BPL CPRES

	LDA #2
	STA 9
	LDA #<RESADR
	STA 2
	LDA #>RESADR
	STA 3

EXIT	JSR CHKBAS
	JSR CLRRAM

; set TRAMSZ to mirror basic status
	LDA 1016
	EOR #1
	STA 6

	RAMJMP BOOTL, BOOT

; disable cartridge and continue boot process
BOOT	INC $42
	CARTOFF
	LDA $D013
	STA $3FA
	DEC $42
	RTS
BOOTL	= * - BOOT

; reset handler
RESH	LDA $D301
	AND #$FE	; enable OS RAM
	STA $D301
	RTS
RESHL	= * - RESH

; check for compatible OS type
CHKOS	LDX #0
	STX OSTYPE
CHKOSL	CPX #OSTABL
	BNE CHKOS1
	LDA #$FF
	RTS
CHKOS1	LDA OSTAB,X
	STA SRCADR
	LDA OSTAB+1,X
	STA SRCADR+1
	LDY #OSCODL-1
CHKOS2	LDA (SRCADR),Y
	BNE CHKOS3
	DEY
	BPL CHKOS2
	STX OSTYPE
	LDA #0
	RTS
CHKOS3	INX
	INX
	STX OSTYPE
	JMP CHKOSL

; free addresses in OS
OSTAB	
;	.WORD $CBB0	; XL/XE OS
	.WORD $CBA0	; XL/XE OS
	.WORD $FFA0	; QMEG 4.04
OSTABL	= * - OSTAB

XEND	= *

	* = $BC20

; default display list to avoid screen flickering with TurboDos

	.DC 3 $70
	.BYTE $42
	.WORD $BC40
	.DC 23 2
	.BYTE $41
	.WORD $BC20

	* = CARTSIG
	.BYTE "HiassofT"
	.BYTE "20100410"

.if .def ATARIMAX8
	* = $BFF0
AMINIT	CARTBNKI 0
	JMP INIT
.endif
	
	* = $BFFA

	.WORD $E477
	.BYTE 0
;	.BYTE 4		; init & start cart, no disk boot allowed
	.BYTE 1		; only init cart, allow disk boot
.if .def ATARIMAX8
	.WORD AMINIT
.else
	.WORD INIT
.endif

